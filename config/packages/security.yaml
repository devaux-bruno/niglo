security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        database_users:
            entity:
                class: 'App\Entity\Utilisateur'
                property: 'emailUtilisateur'
    encoders:
        App\Entity\Utilisateur:
            algorithm: auto


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            form_login:
                login_path: app_login
                check_path: app_login
                provider: database_users
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: app_logout
            guard:
                authenticators:
                    - App\Security\AppCustomAuthenticator
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 31536000 # 1 year in seconds
                path:     /
                token_provider: 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_SUPERADMIN: [ROLE_ADMIN]
        ROLE_ADMIN: [ROLE_MEMBER]

    access_control:
        - { path: ^/superadmin, roles: ROLE_SUPERADMIN }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/member, roles: ROLE_MEMBER }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
